kable(sta, caption = "Exposure to Climate change hazards beyound 200 m by 2041 to 2060")
other <- mask(rasterize(Other_access_regulated_areas, cimp5_2041_2060_exsd), mask2500)
dat <- cbind(as.data.frame(env), as.data.frame(other))
dat <- subset(dat, !is.na(OWNER))
dat$OWNER <- factor(dat$OWNER)
sta <- summaryBy(formula(paste(paste(names(dat)[c(1:4, 10:11)], collapse = "+"), "OWNER", sep="~")),
data=dat, var.names=c("epc", "o2", "ph", "thetao", "aragsat", "calcsat"), FUN=c(mean, min, max))
ord <- c(2, 8, 14)
sta <- sta[, c(1, ord, ord+1, ord+2, ord+3, ord+4 , ord+5)]
sta[, -1] <- round(sta[, -1], 2)
kable(sta, caption = "Exposure to Climate change hazards beyound 200 m by 2041 to 2060")
long <- melt(dat, id.vars="OWNER", measure.vars = names(dat)[c(1:4, 10:11)])
long$OWNER <- factor(long$OWNER, levels=as.character(sta$OWNER)[order(sta$thetao.mean)])
long$variable <- factor(long$variable, levels=names(dat)[c(1:4, 10:11)],
labels = c("Export POC Flux", "Dissolved Oxygen",
"pH", "Temperature", "Aragonite Saturation", "Calcite Saturation"))
ggplot(data=long, aes(x=OWNER, y=value))+
geom_violin(draw_quantiles=0.5, scale="width")+
xlab("")+ylab("Exposure to Climate change hazards by 2041 to 2060")+
facet_wrap(~variable, scale="free_y")+
theme(axis.text.x = element_text(angle = 30, hjust = 1))
#library(devtools)
#install_github("chihlinwei/SCC")
library(SCC)
library(RColorBrewer)
mask200 <- calc(etopo1, fun=function(x){x[x>-200]<-NA; return(x)})
d.colors <- colorRampPalette(brewer.pal(10, 'RdYlBu'))
cor(as.data.frame(cimp5_sdtoe_early), as.data.frame(cimp5_sdtoe_constant), use="pairwise.complete.obs")
r <- mask(cimp5_sdtoe_early, mask200)
mplot(r, col.regions=d.colors, cut=100, colorkey=list(space="top"),
names.attr = c("Export_POC_Flux", "Dissolved_Oxygen", "pH", "Temperature"),
main="Time of Emergence of Climate Change on Seafloor"
)
cimp5_sdtoe_early
names(cimp5_sdtoe_early)
r <- mask(subset(cimp5_sdtoe_early, 1:4), mask200)
mplot(r, col.regions=d.colors, cut=100, colorkey=list(space="top"),
names.attr = c("Export_POC_Flux", "Dissolved_Oxygen", "pH", "Temperature"),
main="Time of Emergence of Climate Change on Seafloor"
)
overlay(subset(cimp5_sdtoe_early, 1:4), fun=max)
r <- mask(overlay(subset(cimp5_sdtoe_early, 1:4), fun=max), mask200)
mplot(r, col.regions=d.colors, cut=100, colorkey=list(space="top"),
#names.attr = c("Export_POC_Flux", "Dissolved_Oxygen", "pH", "Temperature"),
main="Time of Emergence of Climate Change on Seafloor"
)
r <- mask(overlay(subset(cimp5_sdtoe_early, 1:4), fun=mean), mask200)
p1 <- mplot(r, col.regions=d.colors, cut=100, colorkey=list(space="top"),
main="Mean Time of Emergence of Climate Change on Seafloor"
)
r <- mask(overlay(subset(cimp5_sdtoe_early, 1:4), fun=max), mask200)
p2 <- mplot(r, col.regions=d.colors, cut=100, colorkey=list(space="top"),
main="Maximum Time of Emergence of Climate Change on Seafloor"
)
print(p1, split=c(1,1,2,1), more=TRUE)
print(p2, split=c(2,1,2,1))
r <- mask(overlay(subset(cimp5_sdtoe_early, 1:4), fun=mean), mask200)
p1 <- mplot(r, col.regions=d.colors, cut=100, colorkey=list(space="top"),
main="Mean ToE of Climate Change on Seafloor"
)
r <- mask(overlay(subset(cimp5_sdtoe_early, 1:4), fun=max), mask200)
p2 <- mplot(r, col.regions=d.colors, cut=100, colorkey=list(space="top"),
main="Maximum ToE of Climate Change on Seafloor"
)
print(p1, split=c(1,1,2,1), more=TRUE)
print(p2, split=c(2,1,2,1))
levs <- c(0:12, 53, 56)
labs <-c("Land mass", "Atlantic Ocean", "Pacific Ocean", "Indian Ocean", "Mediterranean Sea", "Baltic Sea", "Black Sea", "Red Sea", "Persian Gulf", "Hudson Bay", "Southern Ocean", "Arctic Ocean", "Sea of Japan", "Caspian Sea", "Bay of Bengal")
mplot(mk, col.regions=rainbow, at=c(0:12, 53,56), colorkey=F)
r <- mask(overlay(subset(cimp5_sdtoe_early, 1:4), fun=mean), mask200)
p1 <- mplot(r, col.regions=d.colors, cut=100, colorkey=list(space="top"),
main="Mean Time of Emergence of Climate Change"
)
r <- mask(overlay(subset(cimp5_sdtoe_early, 1:4), fun=max), mask200)
p2 <- mplot(r, col.regions=d.colors, cut=100, colorkey=list(space="top"),
main="Maximum Time of Emergence of Climate Change"
)
print(p1, split=c(1,1,2,1), more=TRUE)
print(p2, split=c(2,1,2,1))
levs <- c(0:12, 53, 56)
labs <-c("Land mass", "Atlantic Ocean", "Pacific Ocean", "Indian Ocean", "Mediterranean Sea", "Baltic Sea", "Black Sea", "Red Sea", "Persian Gulf", "Hudson Bay", "Southern Ocean", "Arctic Ocean", "Sea of Japan", "Caspian Sea", "Bay of Bengal")
mplot(mk, col.regions=rainbow, at=c(0:12, 53,56), colorkey=F)
names(cimp5_sdtoe_early)
subset(cimp5_sdtoe_early, c(1:4, 10:11))
library(doBy)
library(knitr)
library(ggplot2)
library(reshape2)
env <- mask(subset(cimp5_sdtoe_early, c(1:4, 10:11)), mask200)
bas <- mask(mk, mask200)
dat <- cbind(as.data.frame(env), as.data.frame(bas))
dat <- subset(dat, !is.na(Basin_0m))
dat$Basin_0m <- factor(dat$Basin_0m, levels=levs, labels=labs)
sta <- summaryBy(epc_sdtoe_early+o2_sdtoe_early+ph_sdtoe_early+thetao_sdtoe_early+aragsat_sdtoe_early+calcsat_sdtoe_early~Basin_0m, data=dat, var.names=c("epc", "o2", "ph", "thetao"), FUN=c(mean, min, max))
ord <- c(2, 8, 14)
sta <- sta[, c(1, ord, ord+1, ord+2, ord+3, ord+4 , ord+5)]
sta[, -1] <- round(sta[, -1], 0)
kable(sta, caption = "Time of Emergence of Climate changes beyound 200 m")
env <- mask(subset(cimp5_sdtoe_early, c(1:4, 10:11)), mask200)
bas <- mask(mk, mask200)
dat <- cbind(as.data.frame(env), as.data.frame(bas))
dat <- subset(dat, !is.na(Basin_0m))
dat$Basin_0m <- factor(dat$Basin_0m, levels=levs, labels=labs)
sta <- summaryBy(epc_sdtoe_early+o2_sdtoe_early+ph_sdtoe_early+thetao_sdtoe_early+aragsat_sdtoe_early+calcsat_sdtoe_early~Basin_0m, data=dat, var.names=c("epc", "o2", "ph", "thetao", "aragsat", "calcsat"), FUN=c(mean, min, max))
ord <- c(2, 8, 14)
sta <- sta[, c(1, ord, ord+1, ord+2, ord+3, ord+4 , ord+5)]
sta[, -1] <- round(sta[, -1], 0)
kable(sta, caption = "Time of Emergence of Climate changes beyound 200 m")
library(doBy)
library(knitr)
library(ggplot2)
library(reshape2)
env <- mask(subset(cimp5_sdtoe_early, c(1:4, 10:11)), mask200)
bas <- mask(mk, mask200)
dat <- cbind(as.data.frame(env), as.data.frame(bas))
dat <- subset(dat, !is.na(Basin_0m))
dat$Basin_0m <- factor(dat$Basin_0m, levels=levs, labels=labs)
sta <- summaryBy(epc_sdtoe_early+o2_sdtoe_early+ph_sdtoe_early+thetao_sdtoe_early+aragsat_sdtoe_early+calcsat_sdtoe_early~Basin_0m, data=dat, var.names=c("epc", "o2", "ph", "thetao", "aragsat", "calcsat"), FUN=c(mean, min, max))
ord <- c(2, 8, 14)
sta <- sta[, c(1, ord, ord+1, ord+2, ord+3, ord+4 , ord+5)]
sta[, -1] <- round(sta[, -1], 0)
kable(sta, caption = "Time of Emergence of Climate changes beyound 200 m")
long <- melt(dat, id.vars="Basin_0m", measure.vars = names(dat)[c(1:4, 10:11)])
names(dat)
library(doBy)
library(knitr)
library(ggplot2)
library(reshape2)
env <- mask(subset(cimp5_sdtoe_early, c(1:4, 10:11)), mask200)
bas <- mask(mk, mask200)
dat <- cbind(as.data.frame(env), as.data.frame(bas))
dat <- subset(dat, !is.na(Basin_0m))
dat$Basin_0m <- factor(dat$Basin_0m, levels=levs, labels=labs)
sta <- summaryBy(epc_sdtoe_early+o2_sdtoe_early+ph_sdtoe_early+thetao_sdtoe_early+aragsat_sdtoe_early+calcsat_sdtoe_early~Basin_0m, data=dat, var.names=c("epc", "o2", "ph", "thetao", "aragsat", "calcsat"), FUN=c(mean, min, max))
ord <- c(2, 8, 14)
sta <- sta[, c(1, ord, ord+1, ord+2, ord+3, ord+4 , ord+5)]
sta[, -1] <- round(sta[, -1], 0)
kable(sta, caption = "Time of Emergence of Climate changes beyound 200 m")
names(dat)
long <- melt(dat, id.vars="Basin_0m", measure.vars = names(dat)[1:6])
long$Basin_0m <- factor(long$Basin_0m, levels=as.character(sta$Basin_0m)[order(sta$thetao.mean)])
long$variable <- factor(long$variable, levels=names(dat)[1:6],
labels = c("Export POC Flux", "Dissolved Oxygen",
"pH", "Temperature", "Aragonite Saturation", "Calcite Saturation"))
ggplot(data=long, aes(x=Basin_0m, y=value))+
geom_violin(draw_quantiles=0.5, scale="width")+
xlab("")+ylab("Time of Emergence of Climate Changes")+
facet_wrap(~variable, scale="free_y")+
theme(axis.text.x = element_text(angle = 30, hjust = 1))
other <- mask(rasterize(Other_access_regulated_areas, subset(cimp5_sdtoe_early), c(1:4, 10:11)), mask200)
subset(cimp5_sdtoe_early), c(1:4, 10:11))
other <- mask(rasterize(Other_access_regulated_areas, subset(cimp5_sdtoe_early, c(1:4, 10:11))), mask200)
dat <- cbind(as.data.frame(env), as.data.frame(other))
dat <- subset(dat, !is.na(OWNER))
dat$OWNER <- factor(dat$OWNER)
ames(dat)
names(dat)
sta <- summaryBy(formula(paste(paste(names(dat)[1:6], collapse = "+"), "OWNER", sep="~")),
data=dat, var.names=c("epc", "o2", "ph", "thetao", "aragsat", "calcsat"), FUN=c(mean, min, max))
sta
ord <- c(2, 8, 14)
sta <- sta[, c(1, ord, ord+1, ord+2, ord+3, ord+4 , ord+5)]
sta[, -1] <- round(sta[, -1], 0)
kable(sta, caption = "Time of Emergence of Climate changes beyound 200 m")
names(dat)
ggplot(data=long, aes(x=OWNER, y=value))+
geom_violin(draw_quantiles=0.5, scale="width")+
xlab("")+ylab("Time of Emergence of Climate Changes")+
facet_wrap(~variable, scale="free_y")+
theme(axis.text.x = element_text(angle = 30, hjust = 1))
long <- melt(dat, id.vars="OWNER", measure.vars = names(dat)[1:6])
long$OWNER <- factor(long$OWNER, levels=as.character(sta$OWNER)[order(sta$thetao.mean)])
long$variable <- factor(long$variable, levels=names(dat)[1:6],
labels = c("Export POC Flux", "Dissolved Oxygen",
"pH", "Temperature", "Aragonite Saturation", "Calcite Saturation"))
ggplot(data=long, aes(x=OWNER, y=value))+
geom_violin(draw_quantiles=0.5, scale="width")+
xlab("")+ylab("Time of Emergence of Climate Changes")+
facet_wrap(~variable, scale="free_y")+
theme(axis.text.x = element_text(angle = 30, hjust = 1))
env <- mask(subset(cimp5_sdtoe_early, c(1:4, 10:11)), mask2500)
bas <- mask(mk, mask2500)
dat <- cbind(as.data.frame(env), as.data.frame(bas))
dat <- subset(dat, !is.na(Basin_0m))
dat$Basin_0m <- factor(dat$Basin_0m, levels=levs, labels=labs)
sta <- summaryBy(epc_sdtoe_early+o2_sdtoe_early+ph_sdtoe_early+thetao_sdtoe_early+aragsat_sdtoe_early+calcsat_sdtoe_early~Basin_0m, data=dat, var.names=c("epc", "o2", "ph", "thetao", "aragsat", "calcsat"), FUN=c(mean, min, max))
ord <- c(2, 8, 14)
sta <- sta[, c(1, ord, ord+1, ord+2, ord+3, ord+4 , ord+5)]
sta[, -1] <- round(sta[, -1], 0)
kable(sta, caption = "Time of Emergence of Climate changes beyound 200 m")
long <- melt(dat, id.vars="Basin_0m", measure.vars = names(dat)[1:6])
long$Basin_0m <- factor(long$Basin_0m, levels=as.character(sta$Basin_0m)[order(sta$thetao.mean)])
long$variable <- factor(long$variable, levels=names(dat)[1:6],
labels = c("Export POC Flux", "Dissolved Oxygen",
"pH", "Temperature", "Aragonite Saturation", "Calcite Saturation"))
ggplot(data=long, aes(x=Basin_0m, y=value))+
geom_violin(draw_quantiles=0.5, scale="width")+
xlab("")+ylab("Time of Emergence of Climate Changes")+
facet_wrap(~variable, scale="free_y")+
theme(axis.text.x = element_text(angle = 30, hjust = 1))
other <- mask(rasterize(Other_access_regulated_areas, subset(cimp5_sdtoe_early, c(1:4, 10:11))), mask2500)
dat <- cbind(as.data.frame(env), as.data.frame(other))
dat <- subset(dat, !is.na(OWNER))
dat$OWNER <- factor(dat$OWNER)
sta <- summaryBy(formula(paste(paste(names(dat)[1:6], collapse = "+"), "OWNER", sep="~")),
data=dat, var.names=c("epc", "o2", "ph", "thetao", "aragsat", "calcsat"), FUN=c(mean, min, max))
ord <- c(2, 8, 14)
sta <- sta[, c(1, ord, ord+1, ord+2, ord+3, ord+4 , ord+5)]
sta[, -1] <- round(sta[, -1], 0)
kable(sta, caption = "Time of Emergence of Climate changes beyound 200 m")
long <- melt(dat, id.vars="OWNER", measure.vars = names(dat)[1:6])
long$OWNER <- factor(long$OWNER, levels=as.character(sta$OWNER)[order(sta$thetao.mean)])
long$variable <- factor(long$variable, levels=names(dat)[1:6],
labels = c("Export POC Flux", "Dissolved Oxygen",
"pH", "Temperature", "Aragonite Saturation", "Calcite Saturation"))
ggplot(data=long, aes(x=OWNER, y=value))+
geom_violin(draw_quantiles=0.5, scale="width")+
xlab("")+ylab("Time of Emergence of Climate Changes")+
facet_wrap(~variable, scale="free_y")+
theme(axis.text.x = element_text(angle = 30, hjust = 1))
cimp5_sdtoe_constant
library(SCC85)
?SCC85
library(devtools)
install_github("chihlinwei/SCC26")
library(SCC85)
<<<<<<< HEAD
library(devtools)
install_github("chihlinwei/SCC26")
=======
library(SCC85)
library(SCC85)
>>>>>>> 47096471331100965eabdb4215b5f287b01d6dc2
library(SCC85)
knitr::opts_chunk$set(echo = FALSE, message = FALSE)
library(rgdal)
library(mapdata)
library(maps)
library(maptools)
#library(devtools)
#install_github("chihlinwei/SCC")
#install_github("chihlinwei/ISA")
library(SCC85)
library(ISA)
library(sp)
ex <- extent(CCFZ)
ms <- crop(subset(cimp5_1951_2000_av, 1), extent(CCFZ))
ms[extent(c(-157, -154, 18.5, 21))] <- NA
ms[extent(c(-157, -156, 2, 3))] <- NA
PMNExpl <- crop(ISA_PMNExpl, ex)
PMNReserved <- crop(ISA_PMNReserved, ex)
APEI <- crop(spTransform(ISA_APEI, projection(PMNReserved)), ex)
knitr::opts_chunk$set(echo = FALSE, message = FALSE)
library(rgdal)
library(mapdata)
library(maps)
library(maptools)
#library(devtools)
#install_github("chihlinwei/SCC")
#install_github("chihlinwei/ISA")
library(SCC85)
library(ISA)
library(sp)
ex <- extent(CCFZ)
ms <- crop(subset(cimp5_1951_2000_av, 1), extent(CCFZ))
ms[extent(c(-157, -154, 18.5, 21))] <- NA
ms[extent(c(-157, -156, 2, 3))] <- NA
PMNExpl <- crop(ISA_PMNExpl, ex)
PMNReserved <- crop(ISA_PMNReserved, ex)
APEI <- crop(spTransform(ISA_APEI, projection(PMNReserved)), ex)
# 1951 to 2000 time slice
pred1 <- mask(crop(cimp5_1951_2000_av, ex), ms)
# 2041 to 2060 time slice
pred2 <- mask(crop(cimp5_2041_2060_av, ex), ms)
# 2081 to 2100 time slice
pred3 <- mask(crop(cimp5_2081_2100_av, ex), ms)
# Panel function for Pacific center map
panel_fun0 <- function(...){
panel.fill("gray80")
panel.levelplot.raster(...)
sp.polygons(wld.pg2, fill = "gray80", col = "gray50")
sp.polygons(spTransform(CCFZ, CRSobj=CRS(prj)), fill = "transparent", col = "gray30")
}
# Pacific central map projection
prj <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0 +lon_wrap=180"
# Panel function for spplot
panel_fun <- function(...){
panel.fill("gray80")
panel.levelplot.raster(...)
sp.polygons(wld.pg, fill = "gray80", col = "gray50")
sp.polygons(PMNExpl, fill = "transparent", col = "red4")
sp.polygons(PMNReserved, fill = "transparent", col = "green4")
sp.polygons(APEI, fill = "transparent", col = "gray30")
}
# Colorkey function for spplot
colorkey_fun <- function(x){
list(space = "top", raster = TRUE, interpolate = TRUE)
}
e <- etopo1
e[e>(-200)] <-NA
library(dplyr)
# Export POC Flux
r <- subset(cimp5_1951_2000_av, 1)
r <- mask(r, e)
r <- shift(rotate(shift(r, 180)), 180)
projection(r) <- prj
mi <- mask(addLayer(subset(cimp5_1951_2000_av, 1), subset(cimp5_2041_2060_av, 1), subset(cimp5_2041_2060_av, 1)), e) %>% minValue %>% min
mx <- mask(addLayer(subset(cimp5_1951_2000_av, 1), subset(cimp5_2041_2060_av, 1), subset(cimp5_2041_2060_av, 1)), e) %>% maxValue %>% max
gk1 <- seq(log10(mi), log10(mx), len=100)
gat01 <- spplot(log10(r), col.regions=jet.colors2,
at=gk1,
##main=expression(Food~Supply~(mg~C~m^-2~day^-1)),
panel=panel_fun0,
colorkey = list(space = "top", raster = TRUE, interpolate = TRUE, labels=list(at=seq(-0.5, 2, 0.5), labels=c(0.3, 1, 3.2, 10, 31.6, 100))),
scales = list(draw = TRUE, cex = 0.8)
)
# 2041 to 2060 time slice
pred1 <- mask(crop(cimp5_2041_2060_ch, ex), ms)
# 2081 to 2100 time slice
pred2 <- mask(crop(cimp5_2081_2100_ch, ex), ms)
# Change in Export POC Flux
r <- subset(cimp5_2041_2060_ch, 1)
r <- mask(r, e)
r <- shift(rotate(shift(r, 180)), 180)
projection(r) <- prj
lim <- maxValue(abs(r))
ght11 <- spplot(r, col.regions=jet.colors3,
at=seq(-lim, lim, len=101),
#main=expression(Food~Supply),
panel=panel_fun0,
colorkey = colorkey_fun(r),
scales = list(draw = TRUE, cex = 0.8)
)
# Change in dissolved oxygen
r <- subset(cimp5_2041_2060_ch, 2)
r <- mask(r, e)
r <- shift(rotate(shift(r, 180)), 180)
projection(r) <- prj
lim <- maxValue(abs(r))
ght12 <- spplot(r, col.regions=jet.colors3,
at=seq(-lim, lim, len=101),
#main=expression(Oxygen),
panel=panel_fun0,
colorkey = colorkey_fun(r),
scales = list(draw = TRUE, cex = 0.8)
)
# Change in pH
r <- subset(cimp5_2041_2060_ch, 3)
r <- mask(r, e)
r <- shift(rotate(shift(r, 180)), 180)
projection(r) <- prj
lim <- maxValue(abs(r))
ght13 <- spplot(r, col.regions=jet.colors3,
at=seq(-lim, lim, len=101),
#main=expression(pH),
panel=panel_fun0,
colorkey = colorkey_fun(r),
scales = list(draw = TRUE, cex = 0.8)
)
# Change in Temperature
r <- subset(cimp5_2041_2060_ch, 4)
r <- mask(r, e)
r <- shift(rotate(shift(r, 180)), 180)
projection(r) <- prj
lim <- maxValue(abs(r))
ght14 <- spplot(r, col.regions=jet.colors3,
at=seq(-lim, lim, len=101),
#main=expression(Temperature),
panel=panel_fun0,
colorkey = colorkey_fun(r),
scales = list(draw = TRUE, cex = 0.8)
)
library(SCC85)
# Change in Export POC Flux
r <- subset(cimp5_2041_2060_ch, 1)
r <- mask(r, e)
r <- shift(rotate(shift(r, 180)), 180)
projection(r) <- prj
lim <- maxValue(abs(r))
ght11 <- spplot(r, col.regions=jet.colors3,
at=seq(-lim, lim, len=101),
#main=expression(Food~Supply),
panel=panel_fun0,
colorkey = colorkey_fun(r),
scales = list(draw = TRUE, cex = 0.8)
)
# Change in dissolved oxygen
r <- subset(cimp5_2041_2060_ch, 2)
r <- mask(r, e)
r <- shift(rotate(shift(r, 180)), 180)
projection(r) <- prj
lim <- maxValue(abs(r))
ght12 <- spplot(r, col.regions=jet.colors3,
at=seq(-lim, lim, len=101),
#main=expression(Oxygen),
panel=panel_fun0,
colorkey = colorkey_fun(r),
scales = list(draw = TRUE, cex = 0.8)
)
# Change in pH
r <- subset(cimp5_2041_2060_ch, 3)
r <- mask(r, e)
r <- shift(rotate(shift(r, 180)), 180)
projection(r) <- prj
lim <- maxValue(abs(r))
ght13 <- spplot(r, col.regions=jet.colors3,
at=seq(-lim, lim, len=101),
#main=expression(pH),
panel=panel_fun0,
colorkey = colorkey_fun(r),
scales = list(draw = TRUE, cex = 0.8)
)
# Change in Temperature
r <- subset(cimp5_2041_2060_ch, 4)
r <- mask(r, e)
r <- shift(rotate(shift(r, 180)), 180)
projection(r) <- prj
lim <- maxValue(abs(r))
ght14 <- spplot(r, col.regions=jet.colors3,
at=seq(-lim, lim, len=101),
#main=expression(Temperature),
panel=panel_fun0,
colorkey = colorkey_fun(r),
scales = list(draw = TRUE, cex = 0.8)
)
jet.colors3
?SCC85
jet.colors3
library(rgdal)
library(mapdata)
library(maps)
library(maptools)
#library(devtools)
#install_github("chihlinwei/SCC")
#install_github("chihlinwei/ISA")
library(SCC85)
library(ISA)
library(sp)
ex <- extent(CCFZ)
ms <- crop(subset(cimp5_1951_2000_av, 1), extent(CCFZ))
ms[extent(c(-157, -154, 18.5, 21))] <- NA
ms[extent(c(-157, -156, 2, 3))] <- NA
PMNExpl <- crop(ISA_PMNExpl, ex)
PMNReserved <- crop(ISA_PMNReserved, ex)
APEI <- crop(spTransform(ISA_APEI, projection(PMNReserved)), ex)
# 1951 to 2000 time slice
pred1 <- mask(crop(cimp5_1951_2000_av, ex), ms)
# 2041 to 2060 time slice
pred2 <- mask(crop(cimp5_2041_2060_av, ex), ms)
# 2081 to 2100 time slice
pred3 <- mask(crop(cimp5_2081_2100_av, ex), ms)
# Panel function for Pacific center map
panel_fun0 <- function(...){
panel.fill("gray80")
panel.levelplot.raster(...)
sp.polygons(wld.pg2, fill = "gray80", col = "gray50")
sp.polygons(spTransform(CCFZ, CRSobj=CRS(prj)), fill = "transparent", col = "gray30")
}
# Pacific central map projection
prj <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0 +lon_wrap=180"
# Panel function for spplot
panel_fun <- function(...){
panel.fill("gray80")
panel.levelplot.raster(...)
sp.polygons(wld.pg, fill = "gray80", col = "gray50")
sp.polygons(PMNExpl, fill = "transparent", col = "red4")
sp.polygons(PMNReserved, fill = "transparent", col = "green4")
sp.polygons(APEI, fill = "transparent", col = "gray30")
}
# Colorkey function for spplot
colorkey_fun <- function(x){
list(space = "top", raster = TRUE, interpolate = TRUE)
}
e <- etopo1
e[e>(-200)] <-NA
library(dplyr)
# Export POC Flux
r <- subset(cimp5_1951_2000_av, 1)
r <- mask(r, e)
r <- shift(rotate(shift(r, 180)), 180)
projection(r) <- prj
mi <- mask(addLayer(subset(cimp5_1951_2000_av, 1), subset(cimp5_2041_2060_av, 1), subset(cimp5_2041_2060_av, 1)), e) %>% minValue %>% min
mx <- mask(addLayer(subset(cimp5_1951_2000_av, 1), subset(cimp5_2041_2060_av, 1), subset(cimp5_2041_2060_av, 1)), e) %>% maxValue %>% max
gk1 <- seq(log10(mi), log10(mx), len=100)
gat01 <- spplot(log10(r), col.regions=jet.colors2,
at=gk1,
##main=expression(Food~Supply~(mg~C~m^-2~day^-1)),
panel=panel_fun0,
colorkey = list(space = "top", raster = TRUE, interpolate = TRUE, labels=list(at=seq(-0.5, 2, 0.5), labels=c(0.3, 1, 3.2, 10, 31.6, 100))),
scales = list(draw = TRUE, cex = 0.8)
)
library(SCC85)
getwd()
setwd("D:/GitHub/SCC85")
options(error = recover)
devtools::document(roclets=c('rd', 'collate', 'namespace'))
0
0
mydigest <- function (object, algo = c("md5", "sha1", "crc32", "sha256",
"sha512", "xxhash32", "xxhash64", "murmur32"), serialize = TRUE,
file = FALSE, length = Inf, skip = "auto", ascii = FALSE,
raw = FALSE, seed = 0, errormode = c("stop", "warn", "silent"))
{
file.access <- R.utils::fileAccess
.... the code of the digest function here ...
}
library(digest)
R.utils::reassignInPackage("digest", "digest", mydigest)
0
roxygen2::roxygenize()
dirname(path)
library(SCC85)
